# This config trains lora and spa the whole time, which means it restarts the training after grad collection.

max_seq_len: 512
global_seed: 17
model_name_or_path: #TODO

load_path:  # set via bash script to be absolute path to your sparse checkpoint
precision: amp_bf16
hf_save_path: ./checkpoints

max_duration: # TODO
eval_interval: 1
# eval_first: false
seed: ${global_seed}

global_train_batch_size: #TODO
# for mpt-7b dense:
# 4 x A100_80GB = "device_train_microbatch_size: 12"
# 8 x A6000_48GB = "device_train_microbatch_size: 6"

# for mpt-7b sparse (with masks):
# 8 x A6000_48GB = "device_train_microbatch_size: 4"
device_train_microbatch_size: 16
device_eval_batch_size: 16

# Run Name
run_name: # If left blank, will be read from env var $RUN_NAME

model:
  name: hf_causal_lm
  pretrained: true
  pretrained_model_name_or_path: ${model_name_or_path}
  max_seq_len: ${max_seq_len}
  output_hidden_states: true
  weight_bias_dtype: #TODO
  compute_dtype: bf16
    # config_overrides:
    #   attn_config:
    #     attn_impl: torch
  # Set this to `true` if using `train_loader.dataset.packing_ratio` below
  # attn_uses_sequence_id: true

rosa:
  lora_r: #TODO
  spa_d: #TODO
  lora_alpha: 16
  target_modules: 'all-linear'
  lora_dropout: 0.05
  impl: auto
  spa_store_transpose: true
  rosa_dtype: bf16
  spa_num_grads: 1
  grad_acc_mode: mean_squared
  mask_load_path: #TODO
  mask_save_path: #TODO
  terminate_after_mask_generation: #TODO
  schedule: #TODO

# Tokenizer
tokenizer:
  name: ${model_name_or_path}
  kwargs:
    model_max_length: ${max_seq_len}

# Dataloaders
train_loader:
  name: finetuning
  dataset:
    hf_name: json
    split: train
    hf_kwargs:
      data_files: #TODO
    preprocessing_fn: preprocessing:panza_preprocessing_function
    max_seq_len: ${max_seq_len}
    allow_pad_trimming: false
    decoder_only_format: true
    shuffle: true
  drop_last: false
  num_workers: 8
  pin_memory: false
  prefetch_factor: 2
  persistent_workers: true
  timeout: 0

# Optimization
scheduler:
  name: linear_decay_with_warmup
  t_warmup: 20ba
  alpha_f: 0

optimizer:
  name: decoupled_adamw
  lr: # TODO
  betas:
    - 0.9
    - 0.999
  eps: 1.0e-8
  weight_decay: 0.0

# Logging
progress_bar: false
log_to_console: true
console_log_interval: 1ba

callbacks:
  speed_monitor:
    window_size: 10
  lr_monitor: { }
  memory_monitor: { }
  runtime_estimator: { }

loggers:
  wandb: { }
